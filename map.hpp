#pragma once
#include <iostream>
#include <windows.h>

#include "global.hpp"


/*
a = aa
    aa

*/

using namespace std;

char map1[20][40] = {
    "+#####################################+",
    "|             ###########             |",
    "| # ####### #           # # ####### # |",
    "| #       # # ######### # #       # # |",
    "| # #       #             # #       # |",
    "| # ####### # ########### # ####### # |",
    "| #         #             #         # |",
    "|              #### ####            # |",
    "|  # ###### #      X      # ###### ## |",
    "| #    #     #  |     | #    #     ## |",
    "| #  #   #   #  |#####| #  #   #   ## |",
    "|  # ###### #             # ###### ## |",
    "|     #   #    #### ####    #   #     |",
    "| #     #   #             #   #     # |",
    "| # ####### # ########### # ####### # |",
    "| # #       #             # #       # |",
    "| #       # # ######### # #       # # |",
    "| # ####### #           # # ####### # |",
    "|             ###########             |",
    "+#####################################+"};

char map2[20][40] = {
    "+$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$+",
    "|         !                !          |",
    "|         !                !          |",
    "|         !                !          |",
    "|         !                !          |",
    "|         !                !          |",
    "|     !!!!!       !        !!!!!      |",
    "|                 !                   |",
    "|                !!!                  |",
    "|           !!!!!!!!!!!!!             |",
    "|                !!!                  |",
    "|                 !                   |",
    "|                 !                   |",
    "|     !!!!!                !!!!!      |",
    "|         !                !          |",
    "|         !                !          |",
    "|         !                !          |",
    "|         !                !          |",
    "|         !                !          |",
    "+$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$+"};

char map3[20][40] = {
    "+#####################################+",
    "|             ###########             |",
    "| # ####### #           # # ####### # |",
    "| #       # # ######### # #       # # |",
    "| # #       #             # #       # |",
    "| # ####### # ########### # ####### # |",
    "| #         #             #         # |",
    "|              #### ####            # |",
    "|  # ####### #     X      # ###### ## |",
    "| #    #   # #  |     | #    #     ## |",
    "| #  #   #   #  |#####| #  #   #   ## |",
    "|  # ####### #            # ###### ## |",
    "|     #   #    #### ####    #   #     |",
    "| #     #   #             #   #     # |",
    "| # ####### # ########### # ####### # |",
    "| # #       #             # #       # |",
    "| #       # # ######### # #       # # |",
    "| # ####### #           # # ####### # |",
    "|             ###########             |",
    "+#####################################+"};

char tmp_map[20][40]; 
char map[20][80];

void ReadMap() {
    int first, second;

    for(int y = 0; y < 20; y++) {
        for(int x = 0; x < 40; x++) {
            switch(map_num) {
                case 1:
                    tmp_map[y][x] = map1[y][x];
                    break;
                case 2:
                    tmp_map[y][x] = map2[y][x];
                    break;
                case 3:
                    tmp_map[y][x] = map3[y][x];
                    break;
            }
        }
    }
    for (int row = 0; row < 20; row++)  
    {  
        first = -1;
        second = 0;
        for(int column = 0; column < 40; column++ ) {
            
            for(int i = 0; i < 2; i++ ) {
                if(i == 0) {
                    first++;
                    map[row][column + first] = tmp_map[row][column];

                }
                else {
                    second++;
                    map[row][column + second] = tmp_map[row][column];

                }
            }

        }
    }
}

void ShowMap()  
{  
    for(int y = 0; y < 20; y++) 
    {
        for(int x = 0; x < 80; x++) {
            // find where the initial player position
            if(map[y][x] == 'X') {
                player.x = x;
                player.y = y;
            }
            else if (map[y][x] == ' ') {
                // Add a dot to empty spaces
                map[y][x] = '.';
            }
            cout << map[y][x];
        }
        cout << endl;
    }  
}  

void PreviewMap() 
{
    for(int y = 0; y < 20; y++) {
        for(int x = 0; x < 40; x++) {
            switch(map_num) {
                case 1:
                    cout << map1[y][x];
                    break;
                case 2:
                    cout << map2[y][x];
                    break;
                case 3:
                    cout << map3[y][x];
                    break;
            }
        }
        cout << endl;
    }
    
}